// <auto-generated />
using System;
using ApiFury.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApiFury.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181121112356_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApiFury.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TaskAttack");

                    b.Property<string>("TaskTransport");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ApiFury.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Server");

                    b.Property<string>("Username");

                    b.Property<string>("token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiFury.Models.MyVillages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("IdVillage");

                    b.Property<string>("Name");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MyVillages");
                });

            modelBuilder.Entity("ApiFury.Models.TaskAttack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("taskId");

                    b.HasKey("Id");

                    b.HasIndex("taskId");

                    b.ToTable("TaskAttacks");
                });

            modelBuilder.Entity("ApiFury.Models.TaskTransport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("taskId");

                    b.HasKey("Id");

                    b.HasIndex("taskId");

                    b.ToTable("taskTransports");
                });

            modelBuilder.Entity("ApiFury.Models.Villages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("ArgX");

                    b.Property<short>("ArgY");

                    b.Property<bool>("IsEmpty");

                    b.Property<string>("Name");

                    b.Property<string>("PlayerName");

                    b.Property<short>("Population");

                    b.Property<int?>("UserId");

                    b.Property<long>("Villageid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("ApiFury.Entities.Task", b =>
                {
                    b.HasOne("ApiFury.Entities.User", "User")
                        .WithMany("tasks")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ApiFury.Models.MyVillages", b =>
                {
                    b.HasOne("ApiFury.Entities.User")
                        .WithMany("MyVillages")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ApiFury.Models.TaskAttack", b =>
                {
                    b.HasOne("ApiFury.Entities.Task", "task")
                        .WithMany()
                        .HasForeignKey("taskId");

                    b.OwnsOne("ApiFury.Models.Attack", "attack", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd();

                            b1.Property<string>("DestinationVillage")
                                .IsRequired();

                            b1.Property<string>("SourceVillage")
                                .IsRequired();

                            b1.Property<int?>("TaskAttackId");

                            b1.Property<int>("Troop_1");

                            b1.Property<int>("Troop_2");

                            b1.Property<int>("Troop_3");

                            b1.Property<int>("Troop_4");

                            b1.Property<int>("Troop_5");

                            b1.Property<int>("Troop_6");

                            b1.Property<int>("Troop_7");

                            b1.Property<int>("Troop_8");

                            b1.Property<int>("Troop_9");

                            b1.HasIndex("TaskAttackId");

                            b1.ToTable("Attack");

                            b1.HasOne("ApiFury.Models.TaskAttack")
                                .WithMany("attack")
                                .HasForeignKey("TaskAttackId");
                        });
                });

            modelBuilder.Entity("ApiFury.Models.TaskTransport", b =>
                {
                    b.HasOne("ApiFury.Entities.Task", "task")
                        .WithMany()
                        .HasForeignKey("taskId");

                    b.OwnsOne("ApiFury.Models.Transport", "Transports", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd();

                            b1.Property<string>("DestinationVillage")
                                .IsRequired();

                            b1.Property<string>("FromVillage")
                                .IsRequired();

                            b1.Property<int>("ResourceClay");

                            b1.Property<int>("ResourceCrop");

                            b1.Property<int>("ResourceIron");

                            b1.Property<int>("ResourceWood");

                            b1.Property<int?>("TaskTransportId");

                            b1.HasIndex("TaskTransportId");

                            b1.ToTable("Transport");

                            b1.HasOne("ApiFury.Models.TaskTransport")
                                .WithMany("Transports")
                                .HasForeignKey("TaskTransportId");
                        });
                });

            modelBuilder.Entity("ApiFury.Models.Villages", b =>
                {
                    b.HasOne("ApiFury.Entities.User")
                        .WithMany("Villages")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
